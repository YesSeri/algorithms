<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Algorithms for Competitive Programming</title><description>The goal of this project is to translate the wonderful resource http://e-maxx.ru/algo which provides descriptions of many algorithms and data structures especially popular in field of competitive programming. Moreover we want to improve the collected knowledge by extending the articles and adding new articles to the collection.</description><link>https://cp-algorithms.com/</link><atom:link href="https://cp-algorithms.com/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/cp-algorithms/cp-algorithms</docs><language>en-None</language> <pubDate>Wed, 04 Oct 2023 05:34:51 -0000</pubDate> <lastBuildDate>Wed, 04 Oct 2023 05:34:51 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.8.0</generator> <item> <title>Segment Tree</title> <description>&lt;h1&gt;Segment Tree&lt;/h1&gt;&lt;p&gt;A Segment Tree is a data structure that stores information about array intervals as a tree. This allows answering range queries over an array...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/segment_tree.html</link> <pubDate>Wed, 04 Oct 2023 01:01:10 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/segment_tree.html</guid> </item> <item> <title>Dynamic Programming on Broken Profile. Problem &#34;Parquet&#34;</title> <description>&lt;h1&gt;Dynamic Programming on Broken Profile. Problem &#34;Parquet&#34;&lt;/h1&gt;&lt;p&gt;Common problems solved using DP on broken profile include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;finding number of ways to fully fil...&lt;/li&gt;&lt;/ul&gt;</description><link>https://cp-algorithms.com/dynamic_programming/profile-dynamics.html</link> <pubDate>Sun, 24 Sep 2023 19:03:27 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/profile-dynamics.html</guid> </item> <item> <title>Dijkstra - finding shortest paths from given vertex</title> <description>&lt;h1&gt;Dijkstra Algorithm&lt;/h1&gt;&lt;p&gt;You are given a directed or undirected weighted graph with $n$ vertices and $m$ edges. The weights of all edges are non-negative. You a...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/dijkstra.html</link> <pubDate>Sun, 24 Sep 2023 19:03:27 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/dijkstra.html</guid> </item> <item> <title>Suffix Array</title> <description>&lt;h1&gt;Suffix Array&lt;/h1&gt;&lt;h2&gt;Definition&lt;/h2&gt;&lt;p&gt;Let $s$ be a string of length $n$. The $i$-th suffix of $s$ is the substring $s[i \ldots n - 1]$.&lt;/p&gt;&lt;p&gt;A &lt;strong&gt;suffix array&lt;/strong&gt; will con...&lt;/p&gt;</description><link>https://cp-algorithms.com/string/suffix-array.html</link> <pubDate>Sun, 24 Sep 2023 19:03:27 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/suffix-array.html</guid> </item> <item> <title>Preview</title> <description>&lt;script src=&#34;https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js&#34;&gt;&lt;/script&gt;&lt;script type=&#34;text/javascript&#34;&gt; $(document).ready(function(){ ...</description><link>https://cp-algorithms.com/preview.html</link> <pubDate>Sun, 24 Sep 2023 18:27:05 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/preview.html</guid> </item> <item> <title>Binary Search</title> <description>&lt;h1&gt;Binary search&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Binary search&lt;/strong&gt; is a method that allows for quicker search of something by splitting the search interval into two. Its most common applica...&lt;/p&gt;</description><link>https://cp-algorithms.com/num_methods/binary_search.html</link> <pubDate>Sun, 24 Sep 2023 18:22:52 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/num_methods/binary_search.html</guid> </item> <item> <title>Sqrt Tree</title> <description>&lt;h1&gt;Sqrt Tree&lt;/h1&gt;&lt;p&gt;Given an array $a$ that contains $n$ elements and the operation $\circ$ that satisfies associative property: $(x \circ y) \circ z = x \circ (y ...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/sqrt-tree.html</link> <pubDate>Sun, 24 Sep 2023 17:42:01 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/sqrt-tree.html</guid> </item> <item> <title>Josephus problem</title> <description>&lt;h1&gt;Josephus Problem&lt;/h1&gt;&lt;h2&gt;Statement&lt;/h2&gt;&lt;p&gt;We are given the natural numbers $n$ and $k$.All natural numbers from $1$ to $n$ are written in a circle. First, count th...&lt;/p&gt;</description><link>https://cp-algorithms.com/others/josephus_problem.html</link> <pubDate>Sun, 24 Sep 2023 17:42:01 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/others/josephus_problem.html</guid> </item> <item> <title>Manacher&#39;s Algorithm - Finding all sub-palindromes in O(N)</title> <description>&lt;h1&gt;Manacher&#39;s Algorithm - Finding all sub-palindromes in $O(N)$&lt;/h1&gt;&lt;h2&gt;Statement&lt;/h2&gt;&lt;p&gt;Given string $s$ with length $n$. Find all the pairs $(i, j)$ such that substri...&lt;/p&gt;</description><link>https://cp-algorithms.com/string/manacher.html</link> <pubDate>Sun, 24 Sep 2023 17:42:01 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/manacher.html</guid> </item> <item> <title>Lowest Common Ancestor - Binary Lifting</title> <description>&lt;h1&gt;Lowest Common Ancestor - Binary Lifting&lt;/h1&gt;&lt;p&gt;Let $G$ be a tree.For every query of the form &lt;code&gt;(u, v)&lt;/code&gt; we want to find the lowest common ancestor of the nodes `u...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/lca_binary_lifting.html</link> <pubDate>Sun, 24 Sep 2023 17:40:02 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/lca_binary_lifting.html</guid> </item> <item> <title>2-SAT</title> <description>&lt;h1&gt;2-SAT&lt;/h1&gt;&lt;p&gt;SAT (Boolean satisfiability problem) is the problem of assigning Boolean values to variables to satisfy a given Boolean formula.The Boolean formul...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/2SAT.html</link> <pubDate>Sat, 23 Sep 2023 16:48:18 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/2SAT.html</guid> </item> <item> <title>Point location in O(log N)</title> <description>&lt;h1&gt;Point location in $O(log n)$&lt;/h1&gt;&lt;p&gt;Consider the following problem: you are given a [planar subdivision](https://en.wikipedia.org/wiki/Planar_straight-line_graph...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/point-location.html</link> <pubDate>Fri, 22 Sep 2023 11:17:11 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/point-location.html</guid> </item> <item> <title>Maximum flow - Ford-Fulkerson and Edmonds-Karp</title> <description>&lt;h1&gt;Maximum flow - Ford-Fulkerson and Edmonds-Karp&lt;/h1&gt;&lt;p&gt;The Edmonds-Karp algorithm is an implementation of the Ford-Fulkerson method for computing a maximal flow i...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/edmonds_karp.html</link> <pubDate>Sun, 17 Sep 2023 16:48:17 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/edmonds_karp.html</guid> </item> <item> <title>Finding Bridges Online</title> <description>&lt;h1&gt;Finding Bridges Online&lt;/h1&gt;&lt;p&gt;We are given an undirected graph.A bridge is an edge whose removal makes the graph disconnected (or, more precisely, increases the...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/bridge-searching-online.html</link> <pubDate>Sat, 16 Sep 2023 14:08:10 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/bridge-searching-online.html</guid> </item> <item> <title>Tortoise and Hare Algorithm (Linked List cycle detection)</title> <description>&lt;h1&gt;Floyd&#39;s Linked List Cycle Finding Algorithm&lt;/h1&gt;&lt;p&gt;Given a linked list where the starting point of that linked list is denoted by &lt;strong&gt;head&lt;/strong&gt;, and there may or may ...&lt;/p&gt;</description><link>https://cp-algorithms.com/others/tortoise_and_hare.html</link> <pubDate>Wed, 13 Sep 2023 08:41:02 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/others/tortoise_and_hare.html</guid> </item> <item> <title>Binary Exponentiation</title> <description>&lt;h1&gt;Binary Exponentiation&lt;/h1&gt;&lt;p&gt;Binary exponentiation (also known as exponentiation by squaring) is a trick which allows to calculate $a^n$ using only $O(\log n)$ m...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/binary-exp.html</link> <pubDate>Tue, 12 Sep 2023 15:50:59 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/binary-exp.html</guid> </item> <item> <title>Navigation</title> <description>&lt;ul&gt;&lt;li&gt;Home&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;index.md&#34;&gt;Main Page&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;navigation.md&#34;&gt;Navigation&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;tags.md&#34;&gt;Tag index&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;contrib.md&#34;&gt;How to Contribute&lt;/a&gt;&lt;/li&gt;&lt;li&gt;[Code of conduct]...&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><link>https://cp-algorithms.com/navigation.html</link> <pubDate>Sun, 10 Sep 2023 08:20:59 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/navigation.html</guid> </item> <item> <title>Integer factorization</title> <description>&lt;h1&gt;Integer factorization&lt;/h1&gt;&lt;p&gt;In this article we list several algorithms for factorizing integers, each of them can be both fast and also slow (some slower than o...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/factorization.html</link> <pubDate>Sun, 10 Sep 2023 08:20:59 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/factorization.html</guid> </item> <item> <title>Fenwick Tree</title> <description>&lt;h1&gt;Fenwick Tree&lt;/h1&gt;&lt;p&gt;Let, $f$ be some group operation (binary associative function over a set with identity element and inverse elements) and $A$ be an array of i...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/fenwick.html</link> <pubDate>Fri, 01 Sep 2023 05:53:19 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/fenwick.html</guid> </item> <item> <title>Suffix Automaton</title> <description>&lt;h1&gt;Suffix Automaton&lt;/h1&gt;&lt;p&gt;A &lt;strong&gt;suffix automaton&lt;/strong&gt; is a powerful data structure that allows solving many string-related problems. &lt;/p&gt;&lt;p&gt;For example, you can search for a...&lt;/p&gt;</description><link>https://cp-algorithms.com/string/suffix-automaton.html</link> <pubDate>Sun, 27 Aug 2023 21:34:43 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/suffix-automaton.html</guid> </item> </channel></rss>